[tox]
envlist = py34,py27,pep8
minversion = 1.6
skipsdist = True

[testenv]
# Note the hash seed is set to 0 until neutron can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals = sh
commands =
  sh tools/pretty_tox.sh '{posargs}'
# there is also secret magic in pretty_tox.sh which lets you run in a fail only
# mode. To do this define the TRACE_FAILONLY environmental variable.

[testenv:hashtest]
# This is the same as default environment, but with a random PYTHONHASHSEED.
# You can also specify a specific hashseed (for test repeatability) as follows:
#   tox --hashseed 1235130571 -e hashtest
setenv = VIRTUAL_ENV={envdir}

[testenv:api]
setenv = OS_TEST_PATH=./networking_ofagent/tests/api

[testenv:functional]
setenv = OS_TEST_PATH=./networking_ofagent/tests/functional
         OS_TEST_TIMEOUT=90
deps =
  {[testenv]deps}
  -r{toxinidir}/networking_ofagent/tests/functional/requirements.txt

[testenv:dsvm-functional]
setenv = OS_TEST_PATH=./neutron/tests/functional
         OS_SUDO_TESTING=1
         OS_ROOTWRAP_CMD=sudo /usr/local/bin/neutron-rootwrap /etc/neutron/rootwrap.conf
         OS_FAIL_ON_MISSING_DEPS=1
         OS_TEST_TIMEOUT=90
sitepackages=True
deps =
  {[testenv:functional]deps}

[tox:jenkins]
sitepackages = True

[testenv:pep8]
commands=
  # If it is easier to add a check via a shell script, consider adding it in this file
  sh ./tools/misc-sanity-checks.sh
  flake8
  pylint --rcfile=.pylintrc --output-format=colorized {posargs:networking_ofagent}
whitelist_externals = sh

[testenv:i18n]
commands = python ./tools/check_i18n.py ./neutron ./tools/i18n_cfg.py

[testenv:cover]
# Currently this target does not support constraints.
install_command = {toxinidir}/tools/tox_install.sh {opts} {packages}
commands =
  python setup.py test --coverage --coverage-package-name=networking_ofagent --testr-args='{posargs}'

[testenv:venv]
# Currently this target does not support constraints.
install_command = {toxinidir}/tools/tox_install.sh {opts} {packages}
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[flake8]
# E125 continuation line does not distinguish itself from next logical line
# E126 continuation line over-indented for hanging indent
# E128 continuation line under-indented for visual indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with ‘# ‘
# H305 imports not grouped correctly
# H404 multi line docstring should start with a summary
# H405 multi line docstring summary not separated with an empty line
ignore = E125,E126,E128,E129,E265,H305,H404,H405
show-source = true
builtins = _
# TODO(dougw) neutron/tests/unit/vmware exclusion is a temporary services split hack
exclude = .venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build,tools,.ropeproject,rally-scenarios,neutron/tests/unit/vmware*

[hacking]
import_exceptions = networking_ofagent.i18n
local-check-factory = networking_ofagent.hacking.checks.factory
